# дан список. что будет в результате
# a = [1,2,3,4,5]
# del a[2]
# a[2:2] = []
# a.remove(3)
# print(a)

# a[2:3]=[]
# print(a)  # 1 2 4 5


# какие кортежи объявлены верно?
# a = (1,2,3,4,5) # a c d e
# b = [1,2,3,4,5]
# c = tuple('abcde')
# d = tuple(b)
# e = tuple(tuple(d))

# Задание 1
# Дана строка , состоящая ровно из двух слов, разделенных пробелом.
#Переставьте эти слова местами. Результат запишите в строку и выведите получившуюся строку.
# Замените в этой строке все цифры 1 на слово one.
#
# a = '1 over'
# print(a)
# a1 = a[:a.find(' ')]
# a2 = a[a.find(' '):]
# a3 = a2+' '+a1
# print(a3)
# a3=a3.replace('1', 'One')
# print(a3)

# 2 вариант
# str_1 = "Один1 Два1"
# space = str_1.find(" ")
# word_1 = str_1[:space]
# word_2 = str_1[space:]
# print(word_2.replace("1","One"), word_1.replace("1","One"))


# Задание2
# Вывести таблицу умножения от 1 до 9

# a=1
# while a<=9:
#     b=1
#     while b<=a:
#         c=a*b
#         print(c, end=" ")
#         b+=1
#     print(" ")
#     a+=1

# с циклом for
# for i in range(1, 10):
#     # print(i)
#     for j in range(1, 10):
#         print(i*j, end=' ')
#     print()


#Задание 3
# Сгенерировать список из 10 чисел. Диапазон чисел - 0, 9.
# Посчитайте, сколько в нем пар элементов, равных друг другу.
# Любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. При этом образованная пара не участвуют в формировании других пар.
# Вывести цифру из списка '-' количество пар с этой цифрой.
# Например, [1, 1, 1, 1].
# 1 - 2
# Результат: 2 пары.

# import random
#
# a = [random.randint(0, 9) for i in range(10)]
# print(a)
# p = 0
# for i in set(a):
#     print(i, '-', a.count(i) // 2, 'пара(ы)')
#     p += a.count(i) // 2
# print('Результат пар в списке:', p)


#Задание 4
#Даны два кортежа:
# A = (13, 5, 43, 49, 67, 32)
# B = (53, 21, 4, 23)
# Необходимо определить:
# 1) Сумма элементов какого из кортежей больше и вывести соответствующее сообщение на экран
# ( Сумма больше в кортеже - ..)
# 2) Вывести на экран порядковые номера минимальных элементов этих
# кортежей

# A = (13, 5, 43, 49, 67, 32)
# B = (53, 21, 4, 23)
# print(sum(A))
# print(sum(B))
#
# if sum(A) > sum(B):
#     print("Сумма элементов больше в кортеже - A")
# else:
#     print("Сумма элементов больше в кортеже - B")
#
# print((A.index(min(A))) + 1, " - порядковый номер минимального элемента кортежа А")
# print((B.index(min(B))) + 1, " - порядковый номер минимального элемента кортежа В")

#Задание 5
# Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом,
# чтобы элементы первого списка были ключами, а элементы второго — соответственно
# значениями нашего словаря.

# Numbers = dict(zip([1,2,3],['1,2,3']))
# print(Numbers)

# либо так
# a = [123456789]
# b = [987654321]
# s = dict(zip((a), (b)))
# print(s)


#Задание 6
# Создать текстовый файл , записать в него построчно данные
# которые вводит пользователь. Окончанием ввода пусть служит пустая строка.
#
# f = open("15.txt", "a")
# while True:
#     a = input("Введите строку: ")
#     f.write(a + "\n")
#     if a == "":
#         break
# f.close()
#использован режим на дозапись


# дз
# В текстовом файле посчитать кол-во строк, а также для каждой отдельной
# строки определить количество в ней символов.
#


# with open('pop.txt','r') as f:
#     a = 0
# for line in f:
#     line = line.rstrip('\n\r')
#     print(line)
#     print('Количество символов в строке', len(line))





