# def a_function():
#     '''—Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å—Ç–æ –ø–µ—á–∞—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç'''
#     print('You just created a function')
#
#
# a_function()

# for i in range(10):
#     a_function()
#
# def empty_function():
#     pass

# a = [1,2,3,4]
#
#
# def a_f():
#     print(a)
#
# a_f()


# –ó–∞–¥–∞–Ω–∏–µ 1
# –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é , –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É —á–∏—Å–µ–ª –≤ —Å–ø–∏—Å–∫–µ.

# a = [3,5,8,9,14,25]
# def a_f():
#
# b = 0
# for i in a:
#     b += i
# print(b)
#
#
# a_f()

# –∏–ª–∏ —Ç–∞–∫
# import random
#
# b = [random.randint(10, 100) for i in range(10)]
#
#
# def b_f():
#     s = 0
#     for i in b:
#         s += i
#     print(s)
#
#
# b_f()

# –°—É–º–º–∏—Ä—É–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞
# def add (a,b):
#     return a + b
#
# print(add(1,2))

# def add(a, b):
#     return a + b
#
#
# print(add(1, 2))  # 3
# r = add(1, 2)
# print(r, type(r))
# print(add('–ü—Ä–∏–≤–µ—Ç', ' –ú–∏—Ä'))
# print(add([1, 2, 3], [4, 5, 6]))
# add(1, 2)


# def add(a, b=1):
#     print('a =', a, 'b =', b)
#     return a + b
#
#
# print(add(2))
# print(add(2, 5))
# print(add(b=2, a=5))

# def add(a=0, b=0):
#     print('a =', a, 'b =', b)
#     return a + b
#
# print(add())
# print(add(2))
# print(add(2, 5))
# print(add(b=2, a=5))
#
# def a_fun(*args, **kwargs):
#     print(args) # –∫–æ—Ä—Ç–µ–∂
#     for i in args:
#         print(i)
#     print(kwargs) # —Å–ª–æ–≤–∞—Ä—å
#     for k,v in kwargs.items():
#         print(k,v)
#
#
# a_fun(1,2,3, 'asd', n = 'asd', e = 12,fg = 3)
#
# def a_f():
#     global a # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∞ –≥–ª–æ–±–∞–ª—å
#     a = 1
#     b = 2
#     return a + b
#
#
# def b_f():
#     c = 3
#     return a + c
#
# print(a_f())
# print(b_f())

# def fun1(a, b):
#     def fun2(x):
#         return x * x * x
#
#     return fun2(a) + fun2(b) # a = x = x **3 + b = x = x**3
#
#
# print(fun1(4, 5)) # 4**3 + 5**3  # 189

# def s(a,b): return a + b
#
# print(s(1,2))

# –ó–∞–¥–∞–Ω–∏–µ 2
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é season, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é 1 –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ (–æ—Ç 1 –¥–æ 12),
# –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –≤—Ä–µ–º—è –≥–æ–¥–∞, –∫–æ—Ç–æ—Ä–æ–º—É —ç—Ç–æ—Ç –º–µ—Å—è—Ü –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç (–∑–∏–º–∞, –≤–µ—Å–Ω–∞, –ª–µ—Ç–æ –∏–ª–∏ –æ—Å–µ–Ω—å).
# –ù–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –≤–≤–æ–¥–∏—Ç—å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

# def season():
#     a = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 12: "))
#     if a == 12 or a == 1 or a == 2:
#         print("–ó–∏–º–∞")
#     elif a == 3 or a == 4 or a == 5:
#         print("–í–µ—Å–Ω–∞")
#     elif a == 6 or a == 7 or a == 8:
#         print("–õ–µ—Ç–æ")
#     else:
#         print("–û—Å–µ–Ω—å")
#
#
# season()
# 2 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
# def get_season(a):
#     if a in range(1, 3):
#         print("Winter")
#     elif a in range(3, 6):
#         print("Spring")
#     elif a in range(6, 9):
#         print("Summer")
#     elif a in range(9, 12):
#         print("Autumn")
#     else:
#         print("Winter")
#
#     return a
#
#
# get_season(a)


# –ó–∞–¥–∞–Ω–∏–µ 3
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é square, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é 1 –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî —Å—Ç–æ—Ä–æ–Ω—É –∫–≤–∞–¥—Ä–∞—Ç–∞,
# –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é 3 –∑–Ω–∞—á–µ–Ω–∏—è: –ø–µ—Ä–∏–º–µ—Ç—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞, –ø–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞ –∏ –¥–∏–∞–≥–æ–Ω–∞–ª—å –∫–≤–∞–¥—Ä–∞—Ç–∞.
# –°—Ç–æ—Ä–æ–Ω—É –∫–≤–∞–¥—Ä–∞—Ç–∞ –≤–≤–æ–¥–∏—Ç—å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

# a - —Å—Ç–æ—Ä–æ–Ω–∞
# –ü–µ—Ä–∏–º–µ—Ç—Ä = 4 * a
# –ü–ª–æ—â–∞–¥—å = ùëé^2
# –î–∏–∞–≥–æ–Ω–∞–ª—å = a‚àö2
#
# a = int(input('–≤–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É —Å—Ç–æ—Ä–æ–Ω—ã –∫–≤–∞–¥—Ä–∞—Ç–∞'))
# def square(a):
#     b = 4*a
#     print("–ø–µ—Ä–∏–º–µ—Ç—Ä", b)
#     c = a * a
#     print("–ø–ª–æ—â–∞–¥—å", c)
#     d = a * (2 ** 0.5)
#     print("–¥–∏–∞–≥–æ–Ω–∞–ª—å", d)
#     return b,c,d
# square(a)
# 2 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
# def get_quare(a):
#     return f"P={a * 4}, S={a  2}, D={a * 2  0.5}"
#
#
# print(get_quare(int(input())))


# –¥–∑.
# –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä c –≤–≤–µ–¥—ë–Ω–Ω—ã–º–∏ –¥–≤—É–º—è —á–∏—Å–ª–∞–º–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞.
# –í–≤–æ–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: –æ–ø–µ—Ä–∞—Ü–∏–∏ + - * / –∏ –¥–≤–∞ —á–∏—Å–ª–∞. –û–ø–µ—Ä–∞—Ü–∏–∏ —è–≤–ª—è—é—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏.
# –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É: ‚Äú–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å‚Äù
# –ù–æ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã (—Å–¥–µ–ª–∞—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é).

def plus(a, b):
    return a + b


def minus(a, b):
    return a - b


def proisv(a, b):
    return a * b

#
# def delen(a, b):
#     try:
#         return f'result:, {a / b}'
#     except ZeroDivisionError:
#         return 'ZeroDivisionError!'
#
#
# while True:
#     print('two numbers:')
#     num1 = int(input('a='))
#     num2 = int(input('b='))
#     x = input('operator: + - * / 0-exit')
#     if x == '0':
#         break
#     if x == "+":
#         print('result:', plus(num1, num2))
#     elif x == "-":
#         print('result:', minus(num1, num2))
#     elif x == "*":
#         print('result:', proisv(num1, num2))
#     elif x == "/":
#         print('result:', delen(num1, num2))



